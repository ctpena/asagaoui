@use "../styles/spacing";
@use "../utilities/breakpoint";
// ==========================================================================
// margin
// ==========================================================================

// margin-all
@each $size, $value in spacing.$spacers {
  .m-#{$size} {
    margin: $value;
  }
}

// margin-top
@each $size, $value in spacing.$spacers {
  .mt-#{$size} {
    margin-top: $value;
  }
}

// margin-right
@each $size, $value in spacing.$spacers {
  .mr-#{$size} {
    margin-right: $value;
  }
}

// margin-bottom
@each $size, $value in spacing.$spacers {
  .mb-#{$size} {
    margin-bottom: $value;
  }
}

// margin-left
@each $size, $value in spacing.$spacers {
  .ml-#{$size} {
    margin-left: $value;
  }
}

// margin-right margin-left
@each $size, $value in spacing.$spacers {
  .mx-#{$size} {
    margin-right: $value;
    margin-left: $value;
  }
}

// margin-top margin-bottom
@each $size, $value in spacing.$spacers {
  .my-#{$size} {
    margin-top: $value;
    margin-bottom: $value;
  }
}

// ==========================================================================
// Padding
// ==========================================================================

// padding-all
@each $size, $value in spacing.$spacers {
  @if $size != auto {
    .p-#{$size} {
      padding: $value;
    }
  }
}

// padding-top
@each $size, $value in spacing.$spacers {
  @if $size != auto {
    .pt-#{$size} {
      padding-top: $value;
    }
  }
}

// padding-right
@each $size, $value in spacing.$spacers {
  @if $size != auto {
    .pr-#{$size} {
      padding-right: $value;
    }
  }
}

// padding-bottom
@each $size, $value in spacing.$spacers {
  @if $size != auto {
    .pb-#{$size} {
      padding-bottom: $value;
    }
  }
}

// padding-left
@each $size, $value in spacing.$spacers {
  @if $size != auto {
    .pl-#{$size} {
      padding-left: $value;
    }
  }
}

// padding-right padding-left
@each $size, $value in spacing.$spacers {
  @if $size != auto {
    .px-#{$size} {
      padding-right: $value;
      padding-left: $value;
    }
  }
}

// padding-top padding-bottom
@each $size, $value in spacing.$spacers {
  @if $size != auto {
    .py-#{$size} {
      padding-top: $value;
      padding-bottom: $value;
    }
  }
}

// ==========================================================================
// Gap
// ==========================================================================
@each $size, $value in spacing.$spacers {
  @if $size != 'auto' {
    .g-#{$size} {
      gap: $value;
    }
  }
}

//
@each $bp, $size in breakpoint.$breakpoints {
  @include breakpoint.breakpoint($bp) {
    @each $size, $value in spacing.$spacers {
      @if $size != 'auto' {
        .g-#{$bp}-#{$size} {
          gap: $value;
        }
      }
    }
  }
}
